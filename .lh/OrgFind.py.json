{
    "sourceFile": "OrgFind.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1713409628893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1713409899264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,47 +0,0 @@\n-# -*- coding: utf-8 -*-\r\n-import sqlite3\r\n-import re\r\n-\r\n-# 创建或连接到数据库\r\n-conn = sqlite3.connect('yy-OrgCodeNote_my_database.db')\r\n-cursor = conn.cursor()\r\n-\r\n-# 创建表\r\n-cursor.execute('''\r\n-CREATE TABLE IF NOT EXISTS yy-OrgCodeNote_table (\r\n-    id INTEGER PRIMARY KEY,\r\n-    location TEXT,\r\n-    find TEXT,\r\n-    org_num INTEGER,\r\n-    code_num INTEGER\r\n-)\r\n-''')\r\n-\r\n-# 读取文件并处理\r\n-def process_file(file_path):\r\n-    line_number = 0\r\n-    pattern = r'\\[\\[file:(.*)::(.*)\\]\\['\r\n-    try:\r\n-        with open(file_path, 'r', encoding='utf-8') as file:\r\n-            for line in file:\r\n-                line_number += 1\r\n-                match = re.search(pattern, line)\r\n-                if match:\r\n-                    location = match.group(1)\r\n-                    find = match.group(2)\r\n-                    cursor.execute('''\r\n-                    INSERT INTO yy-OrgCodeNote_table (location, find, org_num)\r\n-                    VALUES (?, ?, ?)\r\n-                    ''', (location, find, line_number))\r\n-        conn.commit()\r\n-    except FileNotFoundError:\r\n-        print(\"文件未找到\")\r\n-    except Exception as e:\r\n-        print(f\"处理文件时发生错误: {e}\")\r\n-\r\n-# 使用示例\r\n-file_path = \"program_3-代码项目_yy-OrgCodeNote_setup.py.org\"  # 替换为您的文件路径\r\n-process_file(file_path)\r\n-\r\n-# 关闭数据库连接\r\n-conn.close()\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713409906934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,55 @@\n+\r\n+# -*- coding: utf-8 -*-\r\n+import sqlite3\r\n+import re\r\n+import argparse\r\n+\r\n+# 创建命令行参数解析器\r\n+parser = argparse.ArgumentParser(description='Process a file.')\r\n+parser.add_argument('--file', '-f', type=str, required=True, help='The file path to process.')\r\n+\r\n+# 解析命令行参数\r\n+args = parser.parse_args()\r\n+\r\n+# 创建或连接到数据库\r\n+conn = sqlite3.connect('yy-OrgCodeNote_my_database.db')\r\n+cursor = conn.cursor()\r\n+\r\n+# 创建表\r\n+cursor.execute('''\r\n+CREATE TABLE IF NOT EXISTS yy-OrgCodeNote_table (\r\n+    id INTEGER PRIMARY KEY,\r\n+    location TEXT,\r\n+    find TEXT,\r\n+    org_num INTEGER,\r\n+    code_num INTEGER\r\n+)\r\n+''')\r\n+\r\n+# 读取文件并处理\r\n+def process_file(file_path):\r\n+    line_number = 0\r\n+    pattern = r'\\[\\[file:(.*)::(.*)\\]\\['\r\n+    try:\r\n+        with open(file_path, 'r', encoding='utf-8') as file:\r\n+            for line in file:\r\n+                line_number += 1\r\n+                match = re.search(pattern, line)\r\n+                if match:\r\n+                    location = match.group(1)\r\n+                    find = match.group(2)\r\n+                    cursor.execute('''\r\n+                    INSERT INTO yy-OrgCodeNote_table (location, find, org_num)\r\n+                    VALUES (?, ?, ?)\r\n+                    ''', (location, find, line_number))\r\n+        conn.commit()\r\n+    except FileNotFoundError:\r\n+        print(\"文件未找到\")\r\n+    except Exception as e:\r\n+        print(f\"处理文件时发生错误: {e}\")\r\n+\r\n+# 使用命令行参数调用函数\r\n+process_file(args.file)\r\n+\r\n+# 关闭数据库连接\r\n+conn.close()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713409925241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,55 @@\n+# -*- coding: utf-8 -*-\r\n+import sqlite3\r\n+import re\r\n+import argparse\r\n+\r\n+# 创建命令行参数解析器\r\n+parser = argparse.ArgumentParser(description='Process a file.')\r\n+parser.add_argument('--file', '-f', type=str, required=True, help='The file path to process.')\r\n+\r\n+# 解析命令行参数\r\n+args = parser.parse_args()\r\n+\r\n+# 创建或连接到数据库\r\n+conn = sqlite3.connect('yy-OrgCodeNote_my_database.db')\r\n+cursor = conn.cursor()\r\n+\r\n+# 创建表\r\n+cursor.execute('''\r\n+CREATE TABLE IF NOT EXISTS yy-OrgCodeNote_table (\r\n+    id INTEGER PRIMARY KEY,\r\n+    location TEXT,\r\n+    find TEXT,\r\n+    org_num INTEGER,\r\n+    code_num INTEGER\r\n+)\r\n+''')\r\n+\r\n+# 读取文件并处理\r\n+def process_file(file_path):\r\n+    line_number = 0\r\n+    pattern = r'\\[\\[file:(.*)::(.*)\\]\\['\r\n+    try:\r\n+        with open(file_path, 'r', encoding='utf-8') as file:\r\n+            for line in file:\r\n+                line_number += 1\r\n+                match = re.search(pattern, line)\r\n+                if match:\r\n+                    location = match.group(1)\r\n+                    find = match.group(2)\r\n+                    cursor.execute('''\r\n+                    INSERT INTO yy-OrgCodeNote_table (location, find, org_num)\r\n+                    VALUES (?, ?, ?)\r\n+                    ''', (location, find, line_number))\r\n+        conn.commit()\r\n+    except FileNotFoundError:\r\n+        print(\"文件未找到\")\r\n+    except Exception as e:\r\n+        print(f\"处理文件时发生错误: {e}\")\r\n+\r\n+# 使用命令行参数调用函数\r\n+# \r\n+process_file(args.file)\r\n+\r\n+# 关闭数据库连接\r\n+conn.close()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713409933422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,55 @@\n+# -*- coding: utf-8 -*-\r\n+import sqlite3\r\n+import re\r\n+import argparse\r\n+\r\n+# 创建命令行参数解析器\r\n+parser = argparse.ArgumentParser(description='Process a file.')\r\n+parser.add_argument('--file', '-f', type=str, required=True, help='The file path to process.')\r\n+\r\n+# 解析命令行参数\r\n+args = parser.parse_args()\r\n+\r\n+# 创建或连接到数据库\r\n+conn = sqlite3.connect('yy-OrgCodeNote_my_database.db')\r\n+cursor = conn.cursor()\r\n+\r\n+# 创建表\r\n+cursor.execute('''\r\n+CREATE TABLE IF NOT EXISTS yy-OrgCodeNote_table (\r\n+    id INTEGER PRIMARY KEY,\r\n+    location TEXT,\r\n+    find TEXT,\r\n+    org_num INTEGER,\r\n+    code_num INTEGER\r\n+)\r\n+''')\r\n+\r\n+# 读取文件并处理\r\n+def process_file(file_path):\r\n+    line_number = 0\r\n+    pattern = r'\\[\\[file:(.*)::(.*)\\]\\['\r\n+    try:\r\n+        with open(file_path, 'r', encoding='utf-8') as file:\r\n+            for line in file:\r\n+                line_number += 1\r\n+                match = re.search(pattern, line)\r\n+                if match:\r\n+                    location = match.group(1)\r\n+                    find = match.group(2)\r\n+                    cursor.execute('''\r\n+                    INSERT INTO yy-OrgCodeNote_table (location, find, org_num)\r\n+                    VALUES (?, ?, ?)\r\n+                    ''', (location, find, line_number))\r\n+        conn.commit()\r\n+    except FileNotFoundError:\r\n+        print(\"文件未找到\")\r\n+    except Exception as e:\r\n+        print(f\"处理文件时发生错误: {e}\")\r\n+\r\n+# 使用命令行参数调用函数\r\n+# python script_name.py --file path_to_your_file\r\n+process_file(args.file)\r\n+\r\n+# 关闭数据库连接\r\n+conn.close()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713409939632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,55 @@\n+# -*- coding: utf-8 -*-\r\n+import sqlite3\r\n+import re\r\n+import argparse\r\n+\r\n+# 创建命令行参数解析器\r\n+parser = argparse.ArgumentParser(description='Process a file.')\r\n+parser.add_argument('--file', '-f', type=str, required=True, help='The file path to process.')\r\n+\r\n+# 解析命令行参数\r\n+args = parser.parse_args()\r\n+\r\n+# 创建或连接到数据库\r\n+conn = sqlite3.connect('yy-OrgCodeNote_my_database.db')\r\n+cursor = conn.cursor()\r\n+\r\n+# 创建表\r\n+cursor.execute('''\r\n+CREATE TABLE IF NOT EXISTS yy-OrgCodeNote_table (\r\n+    id INTEGER PRIMARY KEY,\r\n+    location TEXT,\r\n+    find TEXT,\r\n+    org_num INTEGER,\r\n+    code_num INTEGER\r\n+)\r\n+''')\r\n+\r\n+# 读取文件并处理\r\n+def process_file(file_path):\r\n+    line_number = 0\r\n+    pattern = r'\\[\\[file:(.*)::(.*)\\]\\['\r\n+    try:\r\n+        with open(file_path, 'r', encoding='utf-8') as file:\r\n+            for line in file:\r\n+                line_number += 1\r\n+                match = re.search(pattern, line)\r\n+                if match:\r\n+                    location = match.group(1)\r\n+                    find = match.group(2)\r\n+                    cursor.execute('''\r\n+                    INSERT INTO yy-OrgCodeNote_table (location, find, org_num)\r\n+                    VALUES (?, ?, ?)\r\n+                    ''', (location, find, line_number))\r\n+        conn.commit()\r\n+    except FileNotFoundError:\r\n+        print(\"文件未找到\")\r\n+    except Exception as e:\r\n+        print(f\"处理文件时发生错误: {e}\")\r\n+\r\n+# 使用命令行参数调用函数-f\r\n+# python script_name.py --file path_to_your_file\r\n+process_file(args.file)\r\n+\r\n+# 关闭数据库连接\r\n+conn.close()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713410119682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+# -*- coding: utf-8 -*-\r\n+import sqlite3\r\n+import re\r\n+import argparse\r\n+\r\n+# 创建命令行参数解析器\r\n+parser = argparse.ArgumentParser(description='Process a file.')\r\n+parser.add_argument('--file', '-f', type=str, required=True, help='The file path to process.')\r\n+\r\n+# 解析命令行参数\r\n+args = parser.parse_args()\r\n+\r\n+# 创建或连接到数据库\r\n+conn = sqlite3.connect('yy-OrgCodeNote_my_database.db')\r\n+cursor = conn.cursor()\r\n+\r\n+# 创建表CREATE TABLE IF NOT EXISTS `yy-OrgCodeNote_table` (\r\n+    `id` INTEGER PRIMARY KEY,\r\n+    `location` TEXT,\r\n+    `find` TEXT,\r\n+    `org_num` INTEGER,\r\n+    `code_num` INTEGER\r\n+)\r\n+cursor.execute('''\r\n+CREATE TABLE IF NOT EXISTS yy-OrgCodeNote_table (\r\n+    id INTEGER PRIMARY KEY,\r\n+    location TEXT,\r\n+    find TEXT,\r\n+    org_num INTEGER,\r\n+    code_num INTEGER\r\n+)\r\n+''')\r\n+\r\n+# 读取文件并处理\r\n+def process_file(file_path):\r\n+    line_number = 0\r\n+    pattern = r'\\[\\[file:(.*)::(.*)\\]\\['\r\n+    try:\r\n+        with open(file_path, 'r', encoding='utf-8') as file:\r\n+            for line in file:\r\n+                line_number += 1\r\n+                match = re.search(pattern, line)\r\n+                if match:\r\n+                    location = match.group(1)\r\n+                    find = match.group(2)\r\n+                    cursor.execute('''\r\n+                    INSERT INTO yy-OrgCodeNote_table (location, find, org_num)\r\n+                    VALUES (?, ?, ?)\r\n+                    ''', (location, find, line_number))\r\n+        conn.commit()\r\n+    except FileNotFoundError:\r\n+        print(\"文件未找到\")\r\n+    except Exception as e:\r\n+        print(f\"处理文件时发生错误: {e}\")\r\n+\r\n+# 使用命令行参数调用函数-f\r\n+# python script_name.py --file path_to_your_file\r\n+process_file(args.file)\r\n+\r\n+# 关闭数据库连接\r\n+conn.close()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713410125637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,16 +13,16 @@\n # 创建或连接到数据库\r\n conn = sqlite3.connect('yy-OrgCodeNote_my_database.db')\r\n cursor = conn.cursor()\r\n \r\n-# 创建表CREATE TABLE IF NOT EXISTS `yy-OrgCodeNote_table` (\r\n+# 创建表\r\n+CREATE TABLE IF NOT EXISTS `yy-OrgCodeNote_table` (\r\n     `id` INTEGER PRIMARY KEY,\r\n     `location` TEXT,\r\n     `find` TEXT,\r\n     `org_num` INTEGER,\r\n     `code_num` INTEGER\r\n )\r\n-cursor.execute('''\r\n CREATE TABLE IF NOT EXISTS yy-OrgCodeNote_table (\r\n     id INTEGER PRIMARY KEY,\r\n     location TEXT,\r\n     find TEXT,\r\n@@ -57,225 +57,5 @@\n # python script_name.py --file path_to_your_file\r\n process_file(args.file)\r\n \r\n # 关闭数据库连接\r\n-conn.close()\n-# -*- coding: utf-8 -*-\r\n-import sqlite3\r\n-import re\r\n-import argparse\r\n-\r\n-# 创建命令行参数解析器\r\n-parser = argparse.ArgumentParser(description='Process a file.')\r\n-parser.add_argument('--file', '-f', type=str, required=True, help='The file path to process.')\r\n-\r\n-# 解析命令行参数\r\n-args = parser.parse_args()\r\n-\r\n-# 创建或连接到数据库\r\n-conn = sqlite3.connect('yy-OrgCodeNote_my_database.db')\r\n-cursor = conn.cursor()\r\n-\r\n-# 创建表\r\n-cursor.execute('''\r\n-CREATE TABLE IF NOT EXISTS yy-OrgCodeNote_table (\r\n-    id INTEGER PRIMARY KEY,\r\n-    location TEXT,\r\n-    find TEXT,\r\n-    org_num INTEGER,\r\n-    code_num INTEGER\r\n-)\r\n-''')\r\n-\r\n-# 读取文件并处理\r\n-def process_file(file_path):\r\n-    line_number = 0\r\n-    pattern = r'\\[\\[file:(.*)::(.*)\\]\\['\r\n-    try:\r\n-        with open(file_path, 'r', encoding='utf-8') as file:\r\n-            for line in file:\r\n-                line_number += 1\r\n-                match = re.search(pattern, line)\r\n-                if match:\r\n-                    location = match.group(1)\r\n-                    find = match.group(2)\r\n-                    cursor.execute('''\r\n-                    INSERT INTO yy-OrgCodeNote_table (location, find, org_num)\r\n-                    VALUES (?, ?, ?)\r\n-                    ''', (location, find, line_number))\r\n-        conn.commit()\r\n-    except FileNotFoundError:\r\n-        print(\"文件未找到\")\r\n-    except Exception as e:\r\n-        print(f\"处理文件时发生错误: {e}\")\r\n-\r\n-# 使用命令行参数调用函数-f\r\n-# python script_name.py --file path_to_your_file\r\n-process_file(args.file)\r\n-\r\n-# 关闭数据库连接\r\n-conn.close()\n-# -*- coding: utf-8 -*-\r\n-import sqlite3\r\n-import re\r\n-import argparse\r\n-\r\n-# 创建命令行参数解析器\r\n-parser = argparse.ArgumentParser(description='Process a file.')\r\n-parser.add_argument('--file', '-f', type=str, required=True, help='The file path to process.')\r\n-\r\n-# 解析命令行参数\r\n-args = parser.parse_args()\r\n-\r\n-# 创建或连接到数据库\r\n-conn = sqlite3.connect('yy-OrgCodeNote_my_database.db')\r\n-cursor = conn.cursor()\r\n-\r\n-# 创建表\r\n-cursor.execute('''\r\n-CREATE TABLE IF NOT EXISTS yy-OrgCodeNote_table (\r\n-    id INTEGER PRIMARY KEY,\r\n-    location TEXT,\r\n-    find TEXT,\r\n-    org_num INTEGER,\r\n-    code_num INTEGER\r\n-)\r\n-''')\r\n-\r\n-# 读取文件并处理\r\n-def process_file(file_path):\r\n-    line_number = 0\r\n-    pattern = r'\\[\\[file:(.*)::(.*)\\]\\['\r\n-    try:\r\n-        with open(file_path, 'r', encoding='utf-8') as file:\r\n-            for line in file:\r\n-                line_number += 1\r\n-                match = re.search(pattern, line)\r\n-                if match:\r\n-                    location = match.group(1)\r\n-                    find = match.group(2)\r\n-                    cursor.execute('''\r\n-                    INSERT INTO yy-OrgCodeNote_table (location, find, org_num)\r\n-                    VALUES (?, ?, ?)\r\n-                    ''', (location, find, line_number))\r\n-        conn.commit()\r\n-    except FileNotFoundError:\r\n-        print(\"文件未找到\")\r\n-    except Exception as e:\r\n-        print(f\"处理文件时发生错误: {e}\")\r\n-\r\n-# 使用命令行参数调用函数\r\n-# python script_name.py --file path_to_your_file\r\n-process_file(args.file)\r\n-\r\n-# 关闭数据库连接\r\n-conn.close()\n-# -*- coding: utf-8 -*-\r\n-import sqlite3\r\n-import re\r\n-import argparse\r\n-\r\n-# 创建命令行参数解析器\r\n-parser = argparse.ArgumentParser(description='Process a file.')\r\n-parser.add_argument('--file', '-f', type=str, required=True, help='The file path to process.')\r\n-\r\n-# 解析命令行参数\r\n-args = parser.parse_args()\r\n-\r\n-# 创建或连接到数据库\r\n-conn = sqlite3.connect('yy-OrgCodeNote_my_database.db')\r\n-cursor = conn.cursor()\r\n-\r\n-# 创建表\r\n-cursor.execute('''\r\n-CREATE TABLE IF NOT EXISTS yy-OrgCodeNote_table (\r\n-    id INTEGER PRIMARY KEY,\r\n-    location TEXT,\r\n-    find TEXT,\r\n-    org_num INTEGER,\r\n-    code_num INTEGER\r\n-)\r\n-''')\r\n-\r\n-# 读取文件并处理\r\n-def process_file(file_path):\r\n-    line_number = 0\r\n-    pattern = r'\\[\\[file:(.*)::(.*)\\]\\['\r\n-    try:\r\n-        with open(file_path, 'r', encoding='utf-8') as file:\r\n-            for line in file:\r\n-                line_number += 1\r\n-                match = re.search(pattern, line)\r\n-                if match:\r\n-                    location = match.group(1)\r\n-                    find = match.group(2)\r\n-                    cursor.execute('''\r\n-                    INSERT INTO yy-OrgCodeNote_table (location, find, org_num)\r\n-                    VALUES (?, ?, ?)\r\n-                    ''', (location, find, line_number))\r\n-        conn.commit()\r\n-    except FileNotFoundError:\r\n-        print(\"文件未找到\")\r\n-    except Exception as e:\r\n-        print(f\"处理文件时发生错误: {e}\")\r\n-\r\n-# 使用命令行参数调用函数\r\n-# \r\n-process_file(args.file)\r\n-\r\n-# 关闭数据库连接\r\n-conn.close()\n-\r\n-# -*- coding: utf-8 -*-\r\n-import sqlite3\r\n-import re\r\n-import argparse\r\n-\r\n-# 创建命令行参数解析器\r\n-parser = argparse.ArgumentParser(description='Process a file.')\r\n-parser.add_argument('--file', '-f', type=str, required=True, help='The file path to process.')\r\n-\r\n-# 解析命令行参数\r\n-args = parser.parse_args()\r\n-\r\n-# 创建或连接到数据库\r\n-conn = sqlite3.connect('yy-OrgCodeNote_my_database.db')\r\n-cursor = conn.cursor()\r\n-\r\n-# 创建表\r\n-cursor.execute('''\r\n-CREATE TABLE IF NOT EXISTS yy-OrgCodeNote_table (\r\n-    id INTEGER PRIMARY KEY,\r\n-    location TEXT,\r\n-    find TEXT,\r\n-    org_num INTEGER,\r\n-    code_num INTEGER\r\n-)\r\n-''')\r\n-\r\n-# 读取文件并处理\r\n-def process_file(file_path):\r\n-    line_number = 0\r\n-    pattern = r'\\[\\[file:(.*)::(.*)\\]\\['\r\n-    try:\r\n-        with open(file_path, 'r', encoding='utf-8') as file:\r\n-            for line in file:\r\n-                line_number += 1\r\n-                match = re.search(pattern, line)\r\n-                if match:\r\n-                    location = match.group(1)\r\n-                    find = match.group(2)\r\n-                    cursor.execute('''\r\n-                    INSERT INTO yy-OrgCodeNote_table (location, find, org_num)\r\n-                    VALUES (?, ?, ?)\r\n-                    ''', (location, find, line_number))\r\n-        conn.commit()\r\n-    except FileNotFoundError:\r\n-        print(\"文件未找到\")\r\n-    except Exception as e:\r\n-        print(f\"处理文件时发生错误: {e}\")\r\n-\r\n-# 使用命令行参数调用函数\r\n-process_file(args.file)\r\n-\r\n-# 关闭数据库连接\r\n conn.close()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713410144906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+# -*- coding: utf-8 -*-\r\n+import sqlite3\r\n+import re\r\n+import argparse\r\n+\r\n+# 创建命令行参数解析器\r\n+parser = argparse.ArgumentParser(description='Process a file.')\r\n+parser.add_argument('--file', '-f', type=str, required=True, help='The file path to process.')\r\n+\r\n+# 解析命令行参数\r\n+args = parser.parse_args()\r\n+\r\n+# 创建或连接到数据库\r\n+conn = sqlite3.connect('yy-OrgCodeNote_my_database.db')\r\n+cursor = conn.cursor()\r\n+\r\n+# 创建表\r\n+cursor.execute('''\r\n+CREATE TABLE IF NOT EXISTS `yy-OrgCodeNote_table` (\r\n+    `id` INTEGER PRIMARY KEY,\r\n+    `location` TEXT,\r\n+    `find` TEXT,\r\n+    `org_num` INTEGER,\r\n+    `code_num` INTEGER\r\n+)\r\n+    location TEXT,\r\n+    find TEXT,\r\n+    org_num INTEGER,\r\n+    code_num INTEGER\r\n+)\r\n+''')\r\n+\r\n+# 读取文件并处理\r\n+def process_file(file_path):\r\n+    line_number = 0\r\n+    pattern = r'\\[\\[file:(.*)::(.*)\\]\\['\r\n+    try:\r\n+        with open(file_path, 'r', encoding='utf-8') as file:\r\n+            for line in file:\r\n+                line_number += 1\r\n+                match = re.search(pattern, line)\r\n+                if match:\r\n+                    location = match.group(1)\r\n+                    find = match.group(2)\r\n+                    cursor.execute('''\r\n+                    INSERT INTO yy-OrgCodeNote_table (location, find, org_num)\r\n+                    VALUES (?, ?, ?)\r\n+                    ''', (location, find, line_number))\r\n+        conn.commit()\r\n+    except FileNotFoundError:\r\n+        print(\"文件未找到\")\r\n+    except Exception as e:\r\n+        print(f\"处理文件时发生错误: {e}\")\r\n+\r\n+# 使用命令行参数调用函数-f\r\n+# python script_name.py --file path_to_your_file\r\n+process_file(args.file)\r\n+\r\n+# 关闭数据库连接\r\n+conn.close()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713410579193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,17 @@\n     `org_num` INTEGER,\r\n     `code_num` INTEGER\r\n )\r\n ''')\r\n-\r\n+cursor.execute('''\r\n+CREATE TABLE IF NOT EXISTS yy-OrgCodeNote_table (\r\n+    id INTEGER PRIMARY KEY,\r\n+    location TEXT,\r\n+    find TEXT,\r\n+    org_num INTEGER,\r\n+    code_num INTEGER\r\n+)\r\n+'''\r\n # 读取文件并处理\r\n def process_file(file_path):\r\n     line_number = 0\r\n     pattern = r'\\[\\[file:(.*)::(.*)\\]\\['\r\n"
                },
                {
                    "date": 1713410587236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n conn = sqlite3.connect('yy-OrgCodeNote_my_database.db')\r\n cursor = conn.cursor()\r\n \r\n # 创建表\r\n-)\r\n cursor.execute('''\r\n CREATE TABLE IF NOT EXISTS yy-OrgCodeNote_table (\r\n     id INTEGER PRIMARY KEY,\r\n     location TEXT,\r\n"
                }
            ],
            "date": 1713409628893,
            "name": "Commit-0",
            "content": "# -*- coding: utf-8 -*-\r\nimport sqlite3\r\nimport re\r\n\r\n# 创建或连接到数据库\r\nconn = sqlite3.connect('yy-OrgCodeNote_my_database.db')\r\ncursor = conn.cursor()\r\n\r\n# 创建表\r\ncursor.execute('''\r\nCREATE TABLE IF NOT EXISTS yy-OrgCodeNote_table (\r\n    id INTEGER PRIMARY KEY,\r\n    location TEXT,\r\n    find TEXT,\r\n    org_num INTEGER,\r\n    code_num INTEGER\r\n)\r\n''')\r\n\r\n# 读取文件并处理\r\ndef process_file(file_path):\r\n    line_number = 0\r\n    pattern = r'\\[\\[file:(.*)::(.*)\\]\\['\r\n    try:\r\n        with open(file_path, 'r', encoding='utf-8') as file:\r\n            for line in file:\r\n                line_number += 1\r\n                match = re.search(pattern, line)\r\n                if match:\r\n                    location = match.group(1)\r\n                    find = match.group(2)\r\n                    cursor.execute('''\r\n                    INSERT INTO yy-OrgCodeNote_table (location, find, org_num)\r\n                    VALUES (?, ?, ?)\r\n                    ''', (location, find, line_number))\r\n        conn.commit()\r\n    except FileNotFoundError:\r\n        print(\"文件未找到\")\r\n    except Exception as e:\r\n        print(f\"处理文件时发生错误: {e}\")\r\n\r\n# 使用示例\r\nfile_path = \"program_3-代码项目_yy-OrgCodeNote_setup.py.org\"  # 替换为您的文件路径\r\nprocess_file(file_path)\r\n\r\n# 关闭数据库连接\r\nconn.close()\r\n"
        }
    ]
}